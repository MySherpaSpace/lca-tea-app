{"ast":null,"code":"import{Navigate}from\"react-router-dom\";import useAuth from\"../../hooks/use-auth\";import{getNavURL}from\"../../utils/appUtils\";import{jsx as _jsx}from\"react/jsx-runtime\";function AuthProtectedRoute(_ref){var children=_ref.children;var _useAuth=useAuth(),userToken=_useAuth.userToken;// let location = useLocation();\nvar loginUrl=getNavURL(\"/login\");if(!userToken.isLoggedIn){// Redirect them to the /login page, but save the current location they were\n// trying to go to when they were redirected. This allows us to send them\n// along to that page after they login, which is a nicer user experience\n// than dropping them off on the home page.\nreturn/*#__PURE__*/_jsx(Navigate,{to:loginUrl});}return children;}export default AuthProtectedRoute;","map":{"version":3,"names":["Navigate","useAuth","getNavURL","AuthProtectedRoute","children","userToken","loginUrl","isLoggedIn"],"sources":["/Users/mariasherpaspace/Documents/SherpaSpaceWorkFiles/Projects/LCA-TEA/LCA-TEA Coding/lca-tea-app/src/components/routes/AuthProtectedRoute.js"],"sourcesContent":["import { Navigate } from \"react-router-dom\";\nimport useAuth from \"../../hooks/use-auth\";\nimport { getNavURL } from \"../../utils/appUtils\";\n\nfunction AuthProtectedRoute({ children }) {\n  const { userToken } = useAuth();\n  // let location = useLocation();\n\n  const loginUrl = getNavURL(\"/login\")\n\n  if (!userToken.isLoggedIn) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return <Navigate to={loginUrl}/>;\n  }\n\n  return children;\n}\n\nexport default AuthProtectedRoute;"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,kBAAkB,CAC3C,MAAOC,QAAO,KAAM,sBAAsB,CAC1C,OAASC,SAAS,KAAQ,sBAAsB,CAAC,2CAEjD,QAASC,mBAAkB,MAAe,IAAZC,SAAQ,MAARA,QAAQ,CACpC,aAAsBH,OAAO,EAAE,CAAvBI,SAAS,UAATA,SAAS,CACjB;AAEA,GAAMC,SAAQ,CAAGJ,SAAS,CAAC,QAAQ,CAAC,CAEpC,GAAI,CAACG,SAAS,CAACE,UAAU,CAAE,CACzB;AACA;AACA;AACA;AACA,mBAAO,KAAC,QAAQ,EAAC,EAAE,CAAED,QAAS,EAAE,CAClC,CAEA,MAAOF,SAAQ,CACjB,CAEA,cAAeD,mBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}